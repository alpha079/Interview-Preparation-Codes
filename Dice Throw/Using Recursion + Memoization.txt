class Solution {
    const int hell = (int)1e9 + 7;
    int dp[32][1002];
public:
    int DP(int d, int f, int target)
    {
        if (target <= 0)
            return 0;
        if (d == 1)
           if( target <= f){
               return true;
           } 
        if (target < d or target > d * f)
            return 0;
        if (dp[d][target] != -1)
            return dp[d][target];
        int ans = 0;
        for(int val = 1 ; val <= f ; val++)
        {
            if (val <= target)
            {
                ans = (ans + DP(d - 1, f, target - val)) % hell ;
            }
        }
        return dp[d][target] = ans % hell;
        
    }
    int numRollsToTarget(int d, int f, int target) {
        memset(dp, -1, sizeof dp);
        return DP(d, f, target);
    }
};